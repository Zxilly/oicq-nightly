name: "Compile and Publish"

on:
  workflow_dispatch:
  schedule:
    - cron: '43 0 * * *'

permissions: write-all

jobs:
  publish-package:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 1
        repository: takayama-lily/oicq

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 19
        registry-url: 'https://npm.pkg.github.com'

    - name: Install global dependencies
      run: sudo apt install moreutils

    - name: Setup Github Packages
      run: |
        jq '.repository |= "https://github.com/Zxilly/oicq-nightly.git"' package.json | sponge package.json
        COMMIT_SHA=$(git rev-parse --short HEAD)
        OLD_VERSION=$(jq -r ".version" package.json)
        NEW_VERSION="${OLD_VERSION}-$COMMIT_SHA"
        jq ".version |= \"$NEW_VERSION\"" package.json | sponge package.json

    - name: Install project dependencies
      run: |
        npm install
        npm install -g typescript

    - name: Build
      run: |
        # workaround for temporary bug in oicq
        set +e
        tsc
        set -e
        npm pack

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: oicq
        path: oicq-*.tgz

    - name: Update name
      run: |
        jq ".name |= \"@zxilly/oicq\"" package.json | sponge package.json # Github Packages limit
        npm install

    - name: Publish to Github Packages
      run: npx can-npm-publish --yes --verbose && npm publish --access public --registry https://npm.pkg.github.com || echo "::notice::Already published to Github Packages"
      env:
        NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
  publish-branch:
    runs-on: ubuntu-latest
    needs: publish-package
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        path: git-repo

    - name: Setup Git
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

    - name: Get artifact
      uses: actions/download-artifact@v3
      with:
        name: oicq
        path: oicq
    
    - name: Extract artifact
      working-directory: oicq
      run: |
        tar -xzf oicq-*.tgz
        rm oicq-*.tgz
    
    - name: Cleanup and create
      working-directory: git-repo
      run: |
        if git rev-parse --verify publish > /dev/null 2>&1; then
          git branch -D publish
        fi
        git switch --orphan publish
        cp -r ../oicq/package/* .
        git add .
        git commit -m "Publish"
        git push -f origin publish

        VERSION_STRING=$(jq -r ".version" ../oicq/package/package.json)
        VERSION_BRANCH="publish-${VERSION_STRING}"
        # if branch not exist
        if ! git rev-parse --verify $VERSION_BRANCH > /dev/null 2>&1; then
          git switch --orphan $VERSION_BRANCH
          cp -r ../oicq/* .
          git add .
          git commit -m "Publish $VERSION_STRING"
          git push -f origin $VERSION_BRANCH
        fi
  
  publish-release:
    runs-on: ubuntu-latest
    needs: publish-package
    steps:
    - name: Get artifact
      uses: actions/download-artifact@v3
      with:
        name: oicq
        path: oicq
    
    - name: Extract artifact
      working-directory: oicq
      run: |
        tar -xzf oicq-*.tgz

    - name: Get version
      id: get_version
      working-directory: oicq
      run: |
        VERSION_STRING=$(jq -r ".version" package/package.json)
        echo "version=$VERSION_STRING" >> $GITHUB_OUTPUT

    - name: Create pinned release
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "${{ steps.get_version.outputs.version }}"
        prerelease: false
        title: "Publish ${{ steps.get_version.outputs.version }}"
        files: "oicq/oicq-*.tgz"

    - name: Rename file
      run: |
        mv oicq/oicq-*.tgz oicq/oicq.tgz

    - name: Create release
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "latest"
        prerelease: false
        title: "Publish ${{ steps.get_version.outputs.version }}"
        files: "oicq/oicq.tgz"
    





        

        